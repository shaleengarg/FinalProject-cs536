#include "shim.h"

int (*real_open)(const char *pathname, int flags, ...) = NULL;
int (*real_open64)(const char *pathname, int flags, ...) = NULL;
int (*real_openat)(int dirfd, const char *pathname, int flags, ...) = NULL;
int (*real_close)(int fd) = NULL;
int (*real_truncate)(const char *path, off_t length) = NULL;
int (*real_ftruncate)(int fd, off_t length) = NULL;
int (*real_truncate64)(const char *path, off_t length) = NULL;
int (*real_ftruncate64)(int fd, off_t length) = NULL;
int (*real_fallocate)(int fd, int mode, off_t offset, off_t len) = NULL;
int (*real_creat)(const char *pathname, mode_t mode) = NULL;
int (*real_posix_fallocate)(int fd, off_t offset, off_t len) = NULL;
int (*real_sync_file_range)(int fd, off64_t offset, off64_t nbytes, unsigned int flags) = NULL;
ssize_t (*real_readahead)(int fd, off64_t offset, size_t count) = NULL;
FILE* (*real_fopen)(const char *path, const char *mode) = NULL;
FILE* (*real_fdopen)(int fd, const char *mode) = NULL;
FILE* (*real_freopen)(const char *path, const char *mode, FILE *stream) = NULL;
int (*real_fclose)(FILE *fp) = NULL;
ssize_t (*real_read)(int fd, void *buf, size_t count) = NULL;
ssize_t (*real_write)(int fd, const void *buf, size_t count) = NULL;
ssize_t (*real_pread)(int fd, void *buf, size_t count, off_t offset) = NULL;
ssize_t (*real_pwrite)(int fd, const void *buf, size_t count, off_t offset) = NULL;
ssize_t (*real_pread64)(int fd, void *buf, size_t count, off_t offset) = NULL;
ssize_t (*real_pwrite64)(int fd, const void *buf, size_t count, off_t offset) = NULL;
size_t (*real_fread)(void *ptr, size_t size, size_t nmemb, FILE *stream) = NULL;
size_t (*real_fwrite)(const void *ptr, size_t size, size_t nmemb, FILE *stream) = NULL;
ssize_t (*real_readv)(int fd, const struct iovec *iov, int iovcnt) = NULL;
ssize_t (*real_writev)(int fd, const struct iovec *iov, int iovcnt) = NULL;
ssize_t (*real_preadv)(int fd, const struct iovec *iov, int iovcnt, off_t offset) = NULL;
ssize_t (*real_pwritev)(int fd, const struct iovec *iov, int iovcnt, off_t offset) = NULL;
off_t (*real_lseek)(int fd, off_t offset, int whence) = NULL;
int (*real_fseek)(FILE *stream, long offset, int whence) = NULL;
long (*real_ftell)(FILE *stream) = NULL;
void (*real_rewind)(FILE *stream) = NULL;
int (*real_fgetpos)(FILE *stream, fpos_t *pos) = NULL;
int (*real_fsetpos)(FILE *stream, const fpos_t *pos) = NULL;
int (*real_fgetc)(FILE *stream) = NULL;
char* (*real_fgets)(char *s, int size, FILE *stream) = NULL;
int (*real_getc)(FILE *stream) = NULL;
int (*real_ungetc)(int c, FILE *stream) = NULL;
int (*real_fputc)(int c, FILE *stream) = NULL;
int (*real_fputs)(const char *s, FILE *stream) = NULL;
int (*real_putc)(int c, FILE *stream) = NULL;
int (*real_fsync)(int fd) = NULL;
int (*real_fdatasync)(int fd) = NULL;
void (*real_sync)(void) = NULL;
int (*real_syncfs)(int fd) = NULL;
int (*real_fflush)(FILE *stream) = NULL;
int (*real_msync)(void *addr, size_t length, int flags) = NULL;
void* (*real_mmap)(void *addr, size_t length, int prot, int flags, int fd, off_t offset) = NULL;
void* (*real_mmap2)(void *addr, size_t length, int prot, int flags, int fd, off_t pgoffset) = NULL;
int (*real_munmap)(void *addr, size_t length) = NULL;
char* (*real_mmap_private)(const char* filename, size_t* filesize) = NULL;
char* (*real_mmap_read)(const char* filename, size_t* filesize) = NULL;
char* (*real_mmap_shared)(const char* filename, size_t* filesize) = NULL;

void link_real_functions(void){
	//printf("Linking real_* functions\n");
	real_open = (int (*)(const char *, int, ...)) dlsym(RTLD_NEXT, "open");
	real_open64 = (int (*)(const char *, int, ...)) dlsym(RTLD_NEXT, "open64");
	real_openat = (int (*)(int, const char *, int, ...)) dlsym(RTLD_NEXT, "openat");
	real_close = (int (*)(int)) dlsym(RTLD_NEXT, "close");
	real_truncate = (int (*)(const char *, off_t)) dlsym(RTLD_NEXT, "truncate");
	real_ftruncate = (int (*)(int, off_t)) dlsym(RTLD_NEXT, "ftruncate");
	real_truncate64 = (int (*)(const char *, off_t)) dlsym(RTLD_NEXT, "truncate64");
	real_ftruncate64 = (int (*)(int, off_t)) dlsym(RTLD_NEXT, "ftruncate64");
	real_fallocate = (int (*)(int, int, off_t, off_t)) dlsym(RTLD_NEXT, "fallocate");
	real_creat = (int (*)(const char *, mode_t)) dlsym(RTLD_NEXT, "creat");
	real_posix_fallocate = (int (*)(int, off_t, off_t)) dlsym(RTLD_NEXT, "posix_fallocate");
	real_sync_file_range = (int (*)(int, off64_t, off64_t, unsigned int)) dlsym(RTLD_NEXT, "sync_file_range");
	real_readahead = (ssize_t (*)(int, off64_t, size_t)) dlsym(RTLD_NEXT, "readahead");
	real_fopen = (FILE* (*)(const char *, const char *)) dlsym(RTLD_NEXT, "fopen");
	real_fdopen = (FILE* (*)(int, const char *)) dlsym(RTLD_NEXT, "fdopen");
	real_freopen = (FILE* (*)(const char *, const char *, FILE *)) dlsym(RTLD_NEXT, "freopen");
	real_fclose = (int (*)(FILE *)) dlsym(RTLD_NEXT, "fclose");
	real_read = (ssize_t (*)(int, void *, size_t)) dlsym(RTLD_NEXT, "read");
	real_write = (ssize_t (*)(int, const void *, size_t)) dlsym(RTLD_NEXT, "write");
	real_pread = (ssize_t (*)(int, void *, size_t, off_t)) dlsym(RTLD_NEXT, "pread");
	real_pwrite = (ssize_t (*)(int, const void *, size_t, off_t)) dlsym(RTLD_NEXT, "pwrite");
	real_pread64 = (ssize_t (*)(int, void *, size_t, off_t)) dlsym(RTLD_NEXT, "pread64");
	real_pwrite64 = (ssize_t (*)(int, const void *, size_t, off_t)) dlsym(RTLD_NEXT, "pwrite64");
	real_fread = (size_t (*)(void *, size_t, size_t, FILE *)) dlsym(RTLD_NEXT, "fread");
	real_fwrite = (size_t (*)(const void *, size_t, size_t, FILE *)) dlsym(RTLD_NEXT, "fwrite");
	real_readv = (ssize_t (*)(int, const struct iovec *, int)) dlsym(RTLD_NEXT, "readv");
	real_writev = (ssize_t (*)(int, const struct iovec *, int)) dlsym(RTLD_NEXT, "writev");
	real_preadv = (ssize_t (*)(int, const struct iovec *, int, off_t)) dlsym(RTLD_NEXT, "preadv");
	real_pwritev = (ssize_t (*)(int, const struct iovec *, int, off_t)) dlsym(RTLD_NEXT, "pwritev");
	real_lseek = (off_t (*)(int, off_t, int)) dlsym(RTLD_NEXT, "lseek");
	real_fseek = (int (*)(FILE *, long, int)) dlsym(RTLD_NEXT, "fseek");
	real_ftell = (long (*)(FILE *)) dlsym(RTLD_NEXT, "ftell");
	real_rewind = (void (*)(FILE *)) dlsym(RTLD_NEXT, "rewind");
	real_fgetpos = (int (*)(FILE *, fpos_t *)) dlsym(RTLD_NEXT, "fgetpos");
	real_fsetpos = (int (*)(FILE *, const fpos_t *)) dlsym(RTLD_NEXT, "fsetpos");
	real_fgetc = (int (*)(FILE *)) dlsym(RTLD_NEXT, "fgetc");
	real_fgets = (char* (*)(char *, int, FILE *)) dlsym(RTLD_NEXT, "fgets");
	real_getc = (int (*)(FILE *)) dlsym(RTLD_NEXT, "getc");
	real_ungetc = (int (*)(int, FILE *)) dlsym(RTLD_NEXT, "ungetc");
	real_fputc = (int (*)(int, FILE *)) dlsym(RTLD_NEXT, "fputc");
	real_fputs = (int (*)(const char *, FILE *)) dlsym(RTLD_NEXT, "fputs");
	real_putc = (int (*)(int, FILE *)) dlsym(RTLD_NEXT, "putc");
	real_fsync = (int (*)(int)) dlsym(RTLD_NEXT, "fsync");
	real_fdatasync = (int (*)(int)) dlsym(RTLD_NEXT, "fdatasync");
	real_sync = (void (*)(void)) dlsym(RTLD_NEXT, "sync");
	real_syncfs = (int (*)(int)) dlsym(RTLD_NEXT, "syncfs");
	real_fflush = (int (*)(FILE *)) dlsym(RTLD_NEXT, "fflush");
	real_msync = (int (*)(void *, size_t, int)) dlsym(RTLD_NEXT, "msync");
	real_mmap = (void* (*)(void *, size_t, int, int, int, off_t)) dlsym(RTLD_NEXT, "mmap");
	real_mmap2 = (void* (*)(void *, size_t, int, int, int, off_t)) dlsym(RTLD_NEXT, "mmap2");
	real_munmap = (int (*)(void *, size_t)) dlsym(RTLD_NEXT, "munmap");
	real_mmap_private = (char* (*)(const char*, size_t*)) dlsym(RTLD_NEXT, "mmap_private");
	real_mmap_read = (char* (*)(const char*, size_t*)) dlsym(RTLD_NEXT, "mmap_read");
	real_mmap_shared = (char* (*)(const char*, size_t*)) dlsym(RTLD_NEXT, "mmap_shared");
	//printf("DONE LINKING\n");
}


